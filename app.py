# Proje DÃ¼zenleme ve GÃ¼ncelleme
def update_project(project_id, projects):
    project = next((item for item in projects if item["ID"] == project_id), None)
    if project:
        st.subheader(f"Proje {project_id} GÃ¼ncelle")
        new_name = st.text_input("Proje AdÄ±", value=project["Proje AdÄ±"])
        new_status = st.selectbox("Proje Durumu", ["Devam Ediyor", "TamamlandÄ±", "Beklemede"], index=["Devam Ediyor", "TamamlandÄ±", "Beklemede"].index(project["Durum"]))
        new_start_date = st.date_input("BaÅŸlangÄ±Ã§ Tarihi", value=datetime.strptime(project["BaÅŸlangÄ±Ã§ Tarihi"], "%Y-%m-%d"))
        new_end_date = st.date_input("BitiÅŸ Tarihi", value=datetime.strptime(project["BitiÅŸ Tarihi"], "%Y-%m-%d"))
        
        if st.button(f"Proje {project_id} GÃ¼ncelle"):
            project["Proje AdÄ±"] = new_name
            project["Durum"] = new_status
            project["BaÅŸlangÄ±Ã§ Tarihi"] = new_start_date.strftime("%Y-%m-%d")
            project["BitiÅŸ Tarihi"] = new_end_date.strftime("%Y-%m-%d")
            st.success(f"Proje {project_id} baÅŸarÄ±yla gÃ¼ncellendi.")
        return project
    else:
        st.error(f"Proje ID {project_id} bulunamadÄ±.")
        return None

# Projelerin DÃ¼zenli AralÄ±klarla Yenilenmesi (Proje ilerlemesi)
def update_progress(project_id, projects):
    project = next((item for item in projects if item["ID"] == project_id), None)
    if project:
        new_progress = st.slider("Ä°lerleme (%)", min_value=0, max_value=100, value=project["Ä°lerleme"], step=1)
        if st.button(f"Proje {project_id} Ä°lerleme GÃ¼ncelle"):
            project["Ä°lerleme"] = new_progress
            st.success(f"Proje {project_id} ilerlemesi baÅŸarÄ±yla gÃ¼ncellendi.")
        return project
    else:
        st.error(f"Proje ID {project_id} bulunamadÄ±.")
        return None

# KullanÄ±cÄ± ve Yetki YÃ¶netimi
def user_role_management():
    st.sidebar.title("KullanÄ±cÄ± ve Rol YÃ¶netimi")
    role = st.sidebar.selectbox("KullanÄ±cÄ± RolÃ¼", ["YÃ¶netici", "Proje YÃ¶neticisi", "KullanÄ±cÄ±"])
    if role == "YÃ¶netici":
        st.sidebar.subheader("YÃ¶netici Paneli")
        st.sidebar.text("YÃ¶netici olarak projeleri dÃ¼zenleyebilir ve raporlarÄ± gÃ¶rÃ¼ntÃ¼leyebilirsiniz.")
    elif role == "Proje YÃ¶neticisi":
        st.sidebar.subheader("Proje YÃ¶neticisi Paneli")
        st.sidebar.text("Proje yÃ¶neticisi olarak projelere dair ilerleme gÃ¼ncellemeleri yapabilirsiniz.")
    else:
        st.sidebar.subheader("KullanÄ±cÄ± Paneli")
        st.sidebar.text("KullanÄ±cÄ± olarak yalnÄ±zca mevcut projeleri gÃ¶rÃ¼ntÃ¼leyebilirsiniz.")

# TÃ¼m Proje DetaylarÄ±nÄ± GÃ¶rÃ¼ntÃ¼leme
def view_all_projects(projects):
    st.subheader("TÃ¼m Projeleri GÃ¶rÃ¼ntÃ¼le")
    df = pd.DataFrame(projects)
    st.write(df)

# Proje GÃ¼ncellemeleri ve ArÅŸivleme
def manage_project_updates(project_id, projects):
    st.subheader("Proje GÃ¼ncellemeleri ve ArÅŸivleme")
    
    # Proje gÃ¼ncellenebilir
    updated_project = update_project(project_id, projects)
    
    # Proje ilerlemesi gÃ¼ncellenebilir
    updated_project = update_progress(project_id, projects)
    
    # ArÅŸivleme yapÄ±labilir
    if st.button(f"Proje {project_id} ArÅŸivle"):
        archive_project(project_id, projects)
    
    # GÃ¼ncellenmiÅŸ projeyi gÃ¶rÃ¼ntÃ¼leyelim
    if updated_project:
        st.write(f"GÃ¼ncellenmiÅŸ Proje: {updated_project}")

# 3D TasarÄ±m ve Ãœretim AdÄ±mlarÄ±
def manufacturing_steps():
    st.subheader("Ãœretim AdÄ±mlarÄ± ve 3D GÃ¶rselleÅŸtirme")
    st.write("Burada Ã¼retim adÄ±mlarÄ± gÃ¶rselleÅŸtirilecektir.")
    st.write("Ã–rnek olarak: Panel montajÄ±, aksesuar yerleÅŸtirme ve montaj sonrasÄ± testler gibi.")
    st.write("3D gÃ¶rselleÅŸtirmeler burada yer tutucu olarak eklenmiÅŸtir.")
    
# Ana Ekran ve MenÃ¼
def main_ui(projects):
    st.title("ğŸ“‹ Dolap Ãœretim ProgramÄ±")
    
    # KullanÄ±cÄ± ve Rol YÃ¶netimi
    user_role_management()

    # Projeleri GÃ¶rÃ¼ntÃ¼leme
    if st.button("TÃ¼m Projeleri GÃ¶rÃ¼ntÃ¼le"):
        view_all_projects(projects)

    # Proje GÃ¼ncelleme ve ArÅŸivleme
    project_id_to_update = st.number_input("GÃ¼ncellemek veya ArÅŸivlemek iÃ§in Proje ID girin", min_value=1)
    if project_id_to_update:
        manage_project_updates(project_id_to_update, projects)
    
    # Ãœretim AdÄ±mlarÄ±
    manufacturing_steps()

# Tamamlanan Kod
if __name__ == "__main__":
    main_ui(projects)
